{"version":3,"sources":["PortalHost.tsx"],"names":["React","View","StyleSheet","PortalManager","PortalContext","createContext","PortalHost","_setManager","manager","_manager","_mount","children","key","_nextKey","mount","_queue","push","type","_update","update","op","index","findIndex","o","_unmount","unmount","queue","length","action","pop","styles","container","props","Component","displayName","create","flex"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport PortalManager from './PortalManager';\n\ntype Props = {\n  children: React.ReactNode;\n};\n\ntype Operation =\n  | { type: 'mount'; key: number; children: React.ReactNode }\n  | { type: 'update'; key: number; children: React.ReactNode }\n  | { type: 'unmount'; key: number };\n\nexport type PortalMethods = {\n  mount: (children: React.ReactNode) => number;\n  update: (key: number, children: React.ReactNode) => void;\n  unmount: (key: number) => void;\n};\n\nexport const PortalContext = React.createContext<PortalMethods>(null as any);\n\n/**\n * Portal host renders all of its children `Portal` elements.\n * For example, you can wrap a screen in `Portal.Host` to render items above the screen.\n * If you're using the `Provider` component, it already includes `Portal.Host`.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Text } from 'react-native';\n * import { Portal } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   render() {\n *     return (\n *       <Portal.Host>\n *         <Text>Content of the app</Text>\n *       </Portal.Host>\n *     );\n *   }\n * }\n * ```\n *\n * Here any `Portal` elements under `<App />` are rendered alongside `<App />` and will appear above `<App />` like a `Modal`.\n */\nexport default class PortalHost extends React.Component<Props> {\n  static displayName = 'Portal.Host';\n\n  componentDidMount() {\n    const manager = this._manager;\n    const queue = this._queue;\n\n    while (queue.length && manager) {\n      const action = queue.pop();\n      if (action) {\n        // eslint-disable-next-line default-case\n        switch (action.type) {\n          case 'mount':\n            manager.mount(action.key, action.children);\n            break;\n          case 'update':\n            manager.update(action.key, action.children);\n            break;\n          case 'unmount':\n            manager.unmount(action.key);\n            break;\n        }\n      }\n    }\n  }\n\n  _setManager = (manager: PortalManager | undefined | null) => {\n    this._manager = manager;\n  };\n\n  _mount = (children: React.ReactNode) => {\n    const key = this._nextKey++;\n\n    if (this._manager) {\n      this._manager.mount(key, children);\n    } else {\n      this._queue.push({ type: 'mount', key, children });\n    }\n\n    return key;\n  };\n\n  _update = (key: number, children: React.ReactNode) => {\n    if (this._manager) {\n      this._manager.update(key, children);\n    } else {\n      const op = { type: 'mount', key, children };\n      const index = this._queue.findIndex(\n        o => o.type === 'mount' || (o.type === 'update' && o.key === key)\n      );\n\n      if (index > -1) {\n        // @ts-ignore\n        this._queue[index] = op;\n      } else {\n        this._queue.push(op as Operation);\n      }\n    }\n  };\n\n  _unmount = (key: number) => {\n    if (this._manager) {\n      this._manager.unmount(key);\n    } else {\n      this._queue.push({ type: 'unmount', key });\n    }\n  };\n\n  _nextKey = 0;\n  _queue: Operation[] = [];\n  _manager: PortalManager | null | undefined;\n\n  render() {\n    return (\n      <PortalContext.Provider\n        value={{\n          mount: this._mount,\n          update: this._update,\n          unmount: this._unmount,\n        }}\n      >\n        {/* Need collapsable=false here to clip the elevations, otherwise they appear above Portal components */}\n        <View style={styles.container} collapsable={false}>\n          {this.props.children}\n        </View>\n        <PortalManager ref={this._setManager} />\n      </PortalContext.Provider>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n"]}